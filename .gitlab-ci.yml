stages:
  - precommit
  - build
  - sign
  - publish
  - release

variables:
  PACKAGE_FILE: "bootscript"
  PACKAGE_SIGNATURE: "bootscript.sig"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic"

include:
  - project: "DevOps/gitlab-ci/job-templates/precommit"
    ref: a549cf5c2df7a206f2c3c644f5fe6e6dac638345
    file: ".gitlab-ci.yml"

.default:
  interruptible: true
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "web"
      variables:
        PACKAGE_VERSION: ${CI_COMMIT_SHORT_SHA}
    - if: $CI_COMMIT_TAG =~ /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-.*)?$/
      variables:
        PACKAGE_VERSION: ${CI_COMMIT_TAG}

üö∏ precommit:
  extends:
    - .precommit
    - .default

üõ†Ô∏è build:
  stage: build
  extends: .default
  image: golang:1.23@sha256:2fe82a3f3e006b4f2a316c6a21f62b66e1330ae211d039bb8d1128e12ed57bf1
  script:
    - go mod download
    - go build -o $PACKAGE_FILE
  artifacts:
    paths:
      - $PACKAGE_FILE

‚úíÔ∏è sign:
  stage: sign
  extends: .default
  image: devopscrc/gpg-curl:v1@sha256:3b0d9b15478e7c5e9c7dd0778e4c9cfb748ec14152c9d8c3c913655ccdd9bd01
  script:
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
    - gpg --batch --import $CI_PROJECT_DIR/.secure_files/gpg_private_key.asc
    - gpg --batch --yes --detach-sign --armor -o $PACKAGE_SIGNATURE $PACKAGE_FILE
  artifacts:
    paths:
      - $PACKAGE_SIGNATURE
      - $PACKAGE_FILE

üöÄ publish:
  stage: publish
  extends: .default
  image: registry.gitlab.com/gitlab-ci-utils/curl-jq:3.0.4@sha256:51b1d34e833d541c3e7d4e5141c670e896ce8b9d110a0ca4b93c2fedc6c3d4b7
  script:
    # Push the package to the GitLab Packages registry
    - |
      echo -e "\n\033[1;33mUploading package file: ${PACKAGE_FILE} to ${PACKAGE_REGISTRY_URL}/${PACKAGE_FILE}/${PACKAGE_VERSION}/${PACKAGE_FILE}\033[0m"
      curl -s --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ${CI_PROJECT_DIR}/${PACKAGE_FILE} "${PACKAGE_REGISTRY_URL}/${PACKAGE_FILE}/${PACKAGE_VERSION}/${PACKAGE_FILE}"
      if [ $? -eq 0 ]; then
        echo -e "\n\033[1;32mUpload of ${PACKAGE_FILE} succeeded\033[0m"
      else
        echo -e "\n\033[1;31mUpload of ${PACKAGE_FILE} failed\033[0m"
      fi
    # Push the package signature to the GitLab Packages registry
    - |
      echo -e "\n\033[1;33mUploading package signature: ${PACKAGE_SIGNATURE} to ${PACKAGE_REGISTRY_URL}/${PACKAGE_SIGNATURE}/${PACKAGE_VERSION}/${PACKAGE_SIGNATURE}\033[0m"
      curl -s --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ${CI_PROJECT_DIR}/${PACKAGE_SIGNATURE} "${PACKAGE_REGISTRY_URL}/${PACKAGE_SIGNATURE}/${PACKAGE_VERSION}/${PACKAGE_SIGNATURE}"
      if [ $? -eq 0 ]; then
        echo -e "\n\033[1;32mUpload of ${PACKAGE_SIGNATURE} succeeded\033[0m"
      else
        echo -e "\n\033[1;31mUpload of ${PACKAGE_SIGNATURE} failed\033[0m"
      fi

üìù release:
  stage: release
  extends: .default
  image: registry.gitlab.com/gitlab-org/release-cli:v0.20.0@sha256:0cc9957c237cafd4bb6dc553c879a811787ccbc6bbf21d64fd7a5849a8d633ae
  rules:
    - if: $CI_COMMIT_TAG && $PACKAGE_VERSION != ""
  script:
    - |
      release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"${PACKAGE_FILE}\",\"filepath\":\"${PACKAGE_FILE}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${PACKAGE_FILE}/${PACKAGE_VERSION}/${PACKAGE_FILE}\"}" \
        --assets-link "{\"name\":\"${PACKAGE_SIGNATURE}\",\"filepath\":\"${PACKAGE_SIGNATURE}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${PACKAGE_SIGNATURE}/${PACKAGE_VERSION}/${PACKAGE_SIGNATURE}\"}"
